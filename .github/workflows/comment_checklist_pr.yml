name: Comment on PR

on:
  pull_request:
    types: [opened, synchronize]
    branches: [ "main" ]

  workflow_dispatch:
  
jobs:
  verify:
    runs-on: ubuntu-latest
    permissions: write-all
    if: ${{ github.actor != 'dependabot[bot]' }} && ${{ github.actor != 'renovate[bot]' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
             
      - name: Retrieve app name from release config
        run: |
          APPNAME=$(jq -r '.name' "release.json")
          echo "APPNAME=$APPNAME" >> $GITHUB_ENV    
      
      - name: PR comment with file
        uses: thollander/actions-comment-pull-request@v3
        with:
          mode: upsert
          comment_tag: previewComment
          message: |
            # PR checklist
            
            Checklist:
            
            - [ ] Is the name of this app/solution still `${{ env.APPNAME }}`?
            - [ ] Have you updated the version tag in each .qvf file, and followed semantic versioning (e.g. v1.1.1)?
            - [ ] Is this PR named appropriately? For example:
              - Feature release: `feat: add sheet usage event`
              - Bug fix: `fix: replaced deprecated events`
              - Documentation update: `docs: updated images in install guide`
            - [ ] Have you reviewed the unbuilt diff generated by the workflow in /diff?
            
            If you wish to merge and release:

            - Have this PR approved by a code owner, then merge into main
            - Go to releases, an action will generate a draft release with all files in /assets, and any external assets references in `release.json`
            - Make any updates, then submit the release

            Common issues:
            
            - After merging, draft release doesn't update - this is usually because
              the action failed due to an old draft release with the same name.
              Delete the draft release, and re-run the action.
